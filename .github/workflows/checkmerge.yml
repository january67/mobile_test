name: Check if PR is approved and mergeable

on:
  pull_request_review:
    types: [submitted]
    branches:
     - 'releases'

jobs:
  check-pr:
    if: github.event.review.state == 'approved' && github.event.pull_request.base.ref == 'releases'
    runs-on: ubuntu-latest
    steps:
      - name: Check if PR is approved and mergeable
        id: pr-check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          result-encoding: string
          script: |
            const pr = context.payload.pull_request;
          
            const reviewsResponse = await github.rest.pulls.listReviews({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              pull_number: pr.number
            });
            const reviews = reviewsResponse.data;

            const teamResponse = await github.rest.teams.listMembersInOrg({
              org: 'january67',
              team_slug: 'change-review-board',
            });
            const teamMembers = teamResponse.data;
              
            let approvedByCrb = false;
            for (const review of reviews){
              if(review.state === 'APPROVED'){
                const user = review.user.login;
                if (teamMembers.find((member) => member.login === user)) {
                console.log(`${user} is a member of the "change-review-board" team`);
                approvedByCrb = true;
                }
              }
            }
            
            if(!approvedByCrb){
              core.setFailed("No members of CRB approved the pull request");
            }
            return approvedByCrb;
            
            
              
      - name: Merge pull request
        if: steps.check-pr.outputs.result == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const merge = await github.rest.pulls.merge({
              owner: pr.base.repo.owner.login,
              repo: pr.base.repo.name,
              pull_number: pr.number,
            });
            console.log('MERGED', merge);

            
            
           
